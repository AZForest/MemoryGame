{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/alexforest/Desktop/memory-game/src/App.js\";\nimport './App.css';\nimport React, { Component } from 'react';\nimport WinMessage from './components/WinMessage';\nimport image from './assets/brown.png';\n/*import classes from '*.module.css';*/\n\nimport banana from './assets/icons/banana.png';\nimport coconut from './assets/icons/coconut.png';\nimport palm from './assets/icons/palmtree.png';\nimport rum from './assets/icons/rum.png';\nimport shell from './assets/icons/shell.png';\nimport wave from './assets/icons/wave.png';\nimport pine from './assets/icons/pineapple.png';\nimport anchor from './assets/icons/anchor.png';\n/*import Card from './components/Card';*/\n\n/*import Cards from './components/Cards';*/\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cardsArr: [{\n        name: \"card1\",\n        id: 1,\n        isClicked: false,\n        type: \"a\",\n        removed: false,\n        icon: banana,\n        isClickable: true\n      }, {\n        name: \"card2\",\n        id: 2,\n        isClicked: false,\n        type: \"b\",\n        removed: false,\n        icon: coconut,\n        isClickable: true\n      }, {\n        name: \"card3\",\n        id: 3,\n        isClicked: false,\n        type: \"c\",\n        removed: false,\n        icon: palm,\n        isClickable: true\n      }, {\n        name: \"card4\",\n        id: 4,\n        isClicked: false,\n        type: \"d\",\n        removed: false,\n        icon: rum,\n        isClickable: true\n      }, {\n        name: \"card5\",\n        id: 5,\n        isClicked: false,\n        type: \"e\",\n        removed: false,\n        icon: shell,\n        isClickable: true\n      }, {\n        name: \"card6\",\n        id: 6,\n        isClicked: false,\n        type: \"f\",\n        removed: false,\n        icon: wave,\n        isClickable: true\n      }, {\n        name: \"card7\",\n        id: 7,\n        isClicked: false,\n        type: \"g\",\n        removed: false,\n        icon: pine,\n        isClickable: true\n      }, {\n        name: \"card8\",\n        id: 8,\n        isClicked: false,\n        type: \"h\",\n        removed: false,\n        icon: anchor,\n        isClickable: true\n      }, {\n        name: \"card9\",\n        id: 9,\n        isClicked: false,\n        type: \"a\",\n        removed: false,\n        icon: banana,\n        isClickable: true\n      }, {\n        name: \"card10\",\n        id: 10,\n        isClicked: false,\n        type: \"b\",\n        removed: false,\n        icon: coconut,\n        isClickable: true\n      }, {\n        name: \"card11\",\n        id: 11,\n        isClicked: false,\n        type: \"c\",\n        removed: false,\n        icon: palm,\n        isClickable: true\n      }, {\n        name: \"card12\",\n        id: 12,\n        isClicked: false,\n        type: \"d\",\n        removed: false,\n        icon: rum,\n        isClickable: true\n      }, {\n        name: \"card13\",\n        id: 13,\n        isClicked: false,\n        type: \"e\",\n        removed: false,\n        icon: shell,\n        isClickable: true\n      }, {\n        name: \"card14\",\n        id: 14,\n        isClicked: false,\n        type: \"f\",\n        removed: false,\n        icon: wave,\n        isClickable: true\n      }, {\n        name: \"card15\",\n        id: 15,\n        isClicked: false,\n        type: \"g\",\n        removed: false,\n        icon: pine,\n        isClickable: true\n      }, {\n        name: \"card16\",\n        id: 16,\n        isClicked: false,\n        type: \"h\",\n        removed: false,\n        icon: ancho,\n        isClickable: true\n      }],\n      didWin: false\n    };\n\n    this.flipCardHandler = id => {\n      const newArray = [...this.state.cardsArr];\n      const element = newArray[id - 1];\n      element.isClicked = !element.isClicked;\n      let sc = [];\n      newArray.forEach((card, index) => {\n        if (newArray[index].isClicked === true) {\n          sc.push(newArray[index]);\n        }\n\n        ;\n        return sc;\n      });\n      console.log(sc);\n\n      if (sc.length === 2) {\n        setClickableFalseHandler();\n        setTimeout(() => {\n          {\n            //IF CARDS MATCH\n            if (sc[0].type === sc[1].type) {\n              /* function x() {\n                console.log(\"match\");\n              }\n              setTimeout(x, 3000);\n              setTimeout(this.removeHandler(sc[0].id, sc[1].id), 3000);\n              setTimeout(this.checkWinHandler, 3000); */\n              this.removeHandler(sc[0].id, sc[1].id);\n              this.checkWinHandler();\n            } else {\n              //IF CARDS DONT MATCH\n              console.log(\"don't match\");\n              this.setFalseHandler();\n            }\n          }\n        }, 3000);\n      }\n    };\n\n    this.removeHandler = (id1, id2) => {\n      let nArr = this.state.cardsArr;\n      nArr.forEach((el, index) => {\n        if (nArr[index].id === id1) {\n          nArr[index].removed = true;\n          nArr[index].isClicked = false;\n        }\n\n        if (nArr[index].id === id2) {\n          nArr[index].removed = true;\n          nArr[index].isClicked = false;\n        }\n      });\n      this.setState({\n        cardsArr: nArr\n      });\n    };\n\n    this.setFalseHandler = () => {\n      const nArr = this.state.cardsArr;\n      nArr.map((card, index) => {\n        return nArr[index].isClicked = false;\n      });\n      this.setState({\n        cardsArr: nArr\n      });\n    };\n\n    this.checkWinHandler = () => {\n      const nArr = this.state.cardsArr;\n      let didWin = 0;\n\n      for (let i = 0; i < this.state.cardsArr.length; i++) {\n        if (nArr[i].removed) {\n          didWin++;\n        }\n      }\n\n      if (didWin === 16) {\n        this.setState({\n          didWin: true\n        });\n      }\n    };\n\n    this.somethingHandler = id => {\n      console.log(\"hi\");\n      /*const arr = this.state.cardsArr;*/\n    };\n  }\n\n  render() {\n    /* const style1 = {\n      backgroundColor: \"transparent\",\n      cursor: \"none\"\n    }\n    const style2 = {\n      backgroundColor: \"blue\",\n    } */\n    let cardStyle = {\n      position: \"relative\",\n      width: \"100%\",\n      height: \"100%\",\n      textAlign: \"center\",\n      transition: \"transform 1s\",\n      transformStyle: \"preserve-3d\",\n      boxShadow: \"0 4px 8px 0 rgba(0,0,0,0.2)\",\n      borderRadius: \"20px\",\n      opacity: \"1\"\n    };\n    let cardStyle2 = {\n      display: \"none\"\n    };\n    let cardStyle3 = {\n      position: \"relative\",\n      width: \"100%\",\n      height: \"100%\",\n      textAlign: \"center\",\n      transition: \"transform 1s\",\n      transformStyle: \"preserve-3d\",\n      boxShadow: \"0 4px 8px 0 rgba(0,0,0,0.2)\",\n      transform: \"rotateY(180deg)\",\n      borderRadius: \"20px\",\n      opacity: \"1\"\n    };\n    let winMessage = \"\";\n\n    if (this.state.didWin) {\n      winMessage = /*#__PURE__*/_jsxDEV(WinMessage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 20\n      }, this);\n    }\n\n    let cards = this.state.cardsArr.map(card => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Ccard\",\n        name: card.name,\n        id: card.id,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => this.flipCardHandler(card.id),\n          style: this.state.cardsArr[card.id - 1].removed ? cardStyle2 : this.state.cardsArr[card.id - 1].isClicked ? cardStyle3 : cardStyle,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card__face card__face--front\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card__face card__face--back\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: card.icon,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 64\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 17\n        }, this)\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 14\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Matching Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Cards\",\n        children: cards\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), winMessage]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/alexforest/Desktop/memory-game/src/App.js"],"names":["React","Component","WinMessage","image","banana","coconut","palm","rum","shell","wave","pine","anchor","App","state","cardsArr","name","id","isClicked","type","removed","icon","isClickable","ancho","didWin","flipCardHandler","newArray","element","sc","forEach","card","index","push","console","log","length","setClickableFalseHandler","setTimeout","removeHandler","checkWinHandler","setFalseHandler","id1","id2","nArr","el","setState","map","i","somethingHandler","render","cardStyle","position","width","height","textAlign","transition","transformStyle","boxShadow","borderRadius","opacity","cardStyle2","display","cardStyle3","transform","winMessage","cards"],"mappings":"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","sourcesContent":["\nimport './App.css';\nimport React, { Component }from 'react';\nimport WinMessage from './components/WinMessage';\nimport image from './assets/brown.png';\n/*import classes from '*.module.css';*/\nimport banana from './assets/icons/banana.png';\nimport coconut from './assets/icons/coconut.png';\nimport palm from './assets/icons/palmtree.png';\nimport rum from './assets/icons/rum.png';\nimport shell from './assets/icons/shell.png';\nimport wave from './assets/icons/wave.png';\nimport pine from './assets/icons/pineapple.png';\nimport anchor from './assets/icons/anchor.png';\n\n/*import Card from './components/Card';*/\n/*import Cards from './components/Cards';*/\n\nclass App extends Component {\n  state = {\n    cardsArr: [\n      {name: \"card1\", id: 1, isClicked: false, type: \"a\", removed: false, icon: banana, isClickable: true},\n      {name: \"card2\", id: 2, isClicked: false, type: \"b\", removed: false, icon: coconut, isClickable: true},\n      {name: \"card3\", id: 3, isClicked: false, type: \"c\", removed: false, icon: palm, isClickable: true},\n      {name: \"card4\", id: 4, isClicked: false, type: \"d\", removed: false, icon: rum, isClickable: true},\n      {name: \"card5\", id: 5, isClicked: false, type: \"e\", removed: false, icon: shell, isClickable: true},\n      {name: \"card6\", id: 6, isClicked: false, type: \"f\", removed: false, icon: wave, isClickable: true},\n      {name: \"card7\", id: 7, isClicked: false, type: \"g\", removed: false, icon: pine, isClickable: true},\n      {name: \"card8\", id: 8, isClicked: false, type: \"h\", removed: false, icon: anchor, isClickable: true},\n      {name: \"card9\", id: 9, isClicked: false, type: \"a\", removed: false, icon: banana, isClickable: true},\n      {name: \"card10\", id: 10, isClicked: false, type: \"b\", removed: false, icon: coconut, isClickable: true},\n      {name: \"card11\", id: 11, isClicked: false, type: \"c\", removed: false, icon: palm, isClickable: true},\n      {name: \"card12\", id: 12, isClicked: false, type: \"d\", removed: false, icon: rum, isClickable: true},\n      {name: \"card13\", id: 13, isClicked: false, type: \"e\", removed: false, icon: shell, isClickable: true},\n      {name: \"card14\", id: 14, isClicked: false, type: \"f\", removed: false, icon: wave, isClickable: true},\n      {name: \"card15\", id: 15, isClicked: false, type: \"g\", removed: false, icon: pine, isClickable: true},\n      {name: \"card16\", id: 16, isClicked: false, type: \"h\", removed: false, icon: ancho, isClickable: true},\n    ],\n    didWin: false\n  };\n\n  flipCardHandler = (id) => {\n    const newArray = [...this.state.cardsArr];\n    const element = newArray[id - 1];\n    element.isClicked = !element.isClicked;\n\n    let sc = [];\n    newArray.forEach((card, index) => {\n      if (newArray[index].isClicked === true) {\n          sc.push(newArray[index]);\n      };\n      return sc;\n      \n    });\n    console.log(sc);\n    if (sc.length === 2) {\n      setClickableFalseHandler();\n      setTimeout(() => {\n\n        {\n         //IF CARDS MATCH\n         if (sc[0].type === sc[1].type) {\n           /* function x() {\n             console.log(\"match\");\n           }\n           setTimeout(x, 3000);\n           setTimeout(this.removeHandler(sc[0].id, sc[1].id), 3000);\n           setTimeout(this.checkWinHandler, 3000); */\n   \n           this.removeHandler(sc[0].id, sc[1].id);\n           this.checkWinHandler();\n         } else {\n           //IF CARDS DONT MATCH\n           console.log(\"don't match\");\n           this.setFalseHandler();\n         }\n       }\n     }, 3000);\n    }\n    \n    \n\n    \n    \n    \n\n  }\n\n  removeHandler = (id1, id2) => {\n      let nArr = this.state.cardsArr;\n      nArr.forEach((el, index) => {\n        if (nArr[index].id === id1) {\n            nArr[index].removed = true;\n            nArr[index].isClicked = false;\n\n        }\n        if (nArr[index].id === id2) {\n            nArr[index].removed = true;\n            nArr[index].isClicked = false;\n        }\n      });\n      this.setState({cardsArr: nArr});\n  }\n\n  setFalseHandler = () => {\n    const nArr = this.state.cardsArr;\n      nArr.map((card, index) => {\n        return nArr[index].isClicked = false;\n      })\n      this.setState({cardsArr: nArr})\n  }\n\n  checkWinHandler = () => {\n    const nArr = this.state.cardsArr;\n    let didWin = 0;\n    for (let i = 0; i < this.state.cardsArr.length; i++) {\n      if (nArr[i].removed) {\n        didWin++;\n      }\n    }\n    if (didWin === 16) {\n      this.setState({didWin: true});\n    }\n  }\n\n  somethingHandler = (id) => {\n    console.log(\"hi\");\n    /*const arr = this.state.cardsArr;*/\n\n  }\n\n  render() {\n    /* const style1 = {\n      backgroundColor: \"transparent\",\n      cursor: \"none\"\n    }\n    const style2 = {\n      backgroundColor: \"blue\",\n    } */\n\n    let cardStyle = {\n      position: \"relative\",\n      width: \"100%\",\n      height: \"100%\",\n      textAlign: \"center\",\n      transition: \"transform 1s\",\n      transformStyle: \"preserve-3d\",\n      boxShadow: \"0 4px 8px 0 rgba(0,0,0,0.2)\",\n      borderRadius: \"20px\",\n      opacity: \"1\"\n    };\n    let cardStyle2 = {\n      display: \"none\"\n    }\n    let cardStyle3 = {\n      position: \"relative\",\n      width: \"100%\",\n      height: \"100%\",\n      textAlign: \"center\",\n      transition: \"transform 1s\",\n      transformStyle: \"preserve-3d\",\n      boxShadow: \"0 4px 8px 0 rgba(0,0,0,0.2)\",\n      transform: \"rotateY(180deg)\",\n      borderRadius: \"20px\",\n      opacity: \"1\"\n    }\n\n\n    let winMessage = \"\";\n    if (this.state.didWin) {\n      winMessage = <WinMessage />;\n    }\n\n\n    let cards = this.state.cardsArr.map((card) => {\n      return <div className=\"Ccard\"\n                  name={card.name} \n                  id={card.id} \n                  key={card.id}>\n                <div onClick={() => this.flipCardHandler(card.id)} \n                    style={this.state.cardsArr[card.id -1].removed ? cardStyle2\n                    : this.state.cardsArr[card.id - 1].isClicked ? cardStyle3\n                    : cardStyle}>\n                  <div className=\"card__face card__face--front\"></div>\n                  <div className=\"card__face card__face--back\"><img src={card.icon} alt=\"\"/></div>\n                </div>\n              </div>\n    })\n      \n    return (\n      <div className=\"App\">\n        <h1>Matching Game</h1>\n        <div className=\"Cards\">\n          {cards}\n        </div>\n        {winMessage}\n      </div>\n    );\n  }\n  \n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}