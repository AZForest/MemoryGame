{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/alexforest/Desktop/MemoryGame/src/App.js\";\nimport './App.css';\nimport React, { Component } from 'react';\nimport WinMessage from './components/WinMessage/WinMessage';\n/*import image from './assets/brown.png';*/\n\nimport banana from './assets/icons/banana.png';\nimport coconut from './assets/icons/coconut.png';\nimport palm from './assets/icons/palmtree.png';\nimport rum from './assets/icons/rum.png';\nimport shell from './assets/icons/shell.png';\nimport wave from './assets/icons/wave.png';\nimport pine from './assets/icons/pineapple.png';\nimport anchor from './assets/icons/anchor.png';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cardsArr: [{\n        name: \"card1\",\n        id: 1,\n        isClicked: false,\n        type: \"a\",\n        removed: false,\n        icon: banana\n      }, {\n        name: \"card2\",\n        id: 2,\n        isClicked: false,\n        type: \"b\",\n        removed: false,\n        icon: coconut\n      }, {\n        name: \"card3\",\n        id: 3,\n        isClicked: false,\n        type: \"c\",\n        removed: false,\n        icon: palm\n      }, {\n        name: \"card4\",\n        id: 4,\n        isClicked: false,\n        type: \"d\",\n        removed: false,\n        icon: rum\n      }, {\n        name: \"card5\",\n        id: 5,\n        isClicked: false,\n        type: \"e\",\n        removed: false,\n        icon: shell\n      }, {\n        name: \"card6\",\n        id: 6,\n        isClicked: false,\n        type: \"f\",\n        removed: false,\n        icon: wave\n      }, {\n        name: \"card7\",\n        id: 7,\n        isClicked: false,\n        type: \"g\",\n        removed: false,\n        icon: pine\n      }, {\n        name: \"card8\",\n        id: 8,\n        isClicked: false,\n        type: \"h\",\n        removed: false,\n        icon: anchor\n      }, {\n        name: \"card9\",\n        id: 9,\n        isClicked: false,\n        type: \"a\",\n        removed: false,\n        icon: banana\n      }, {\n        name: \"card10\",\n        id: 10,\n        isClicked: false,\n        type: \"b\",\n        removed: false,\n        icon: coconut\n      }, {\n        name: \"card11\",\n        id: 11,\n        isClicked: false,\n        type: \"c\",\n        removed: false,\n        icon: palm\n      }, {\n        name: \"card12\",\n        id: 12,\n        isClicked: false,\n        type: \"d\",\n        removed: false,\n        icon: rum\n      }, {\n        name: \"card13\",\n        id: 13,\n        isClicked: false,\n        type: \"e\",\n        removed: false,\n        icon: shell\n      }, {\n        name: \"card14\",\n        id: 14,\n        isClicked: false,\n        type: \"f\",\n        removed: false,\n        icon: wave\n      }, {\n        name: \"card15\",\n        id: 15,\n        isClicked: false,\n        type: \"g\",\n        removed: false,\n        icon: pine\n      }, {\n        name: \"card16\",\n        id: 16,\n        isClicked: false,\n        type: \"h\",\n        removed: false,\n        icon: anchor\n      }],\n      didWin: false,\n      moves: 0\n    };\n\n    this.flipCardHandler = id => {\n      console.log(this.state.baseState);\n      const newArray = [...this.state.cardsArr]; // const element = newArray[id - 1];\n\n      let element;\n      newArray.forEach(item => {\n        if (item.id === id) {\n          element = item;\n        }\n      });\n      let sc = [];\n      newArray.forEach((card, index) => {\n        if (newArray[index].isClicked === true) {\n          sc.push(newArray[index]);\n        }\n\n        ;\n        return sc;\n      });\n\n      if (sc.length < 2) {\n        element.isClicked = !element.isClicked;\n      }\n\n      let prevMoves = this.state.moves;\n      prevMoves += 1;\n      this.setState({\n        cardsArr: newArray,\n        moves: prevMoves\n      });\n      let secondArray = this.state.cardsArr;\n      let sc2 = [];\n      secondArray.forEach((card, index) => {\n        if (secondArray[index].isClicked === true) {\n          sc2.push(secondArray[index]);\n        }\n\n        return sc2;\n      });\n      console.log(sc2);\n\n      if (sc2.length === 2) {\n        setTimeout(() => {\n          //IF CARDS MATCH\n          if (sc2[0].type === sc2[1].type) {\n            this.removeHandler(sc2[0].id, sc2[1].id);\n            this.checkWinHandler();\n          } else {\n            //IF CARDS DONT MATCH\n            this.setFalseHandler();\n          }\n        }, 1500);\n      }\n    };\n\n    this.removeHandler = (id1, id2) => {\n      let nArr = this.state.cardsArr;\n      nArr.forEach((el, index) => {\n        if (nArr[index].id === id1) {\n          nArr[index].removed = true;\n          nArr[index].isClicked = false;\n        }\n\n        if (nArr[index].id === id2) {\n          nArr[index].removed = true;\n          nArr[index].isClicked = false;\n        }\n      });\n      this.setState({\n        cardsArr: nArr\n      });\n    };\n\n    this.setFalseHandler = () => {\n      const nArr = this.state.cardsArr;\n      nArr.map((card, index) => {\n        return nArr[index].isClicked = false;\n      });\n      this.setState({\n        cardsArr: nArr\n      });\n    };\n\n    this.checkWinHandler = () => {\n      const nArr = this.state.cardsArr;\n      let didWin = 0;\n\n      for (let i = 0; i < this.state.cardsArr.length; i++) {\n        if (nArr[i].removed) {\n          didWin++;\n        }\n      }\n\n      if (didWin === 16) {\n        this.setState({\n          didWin: true\n        });\n      }\n    };\n\n    this.shuffleArray = array => {\n      for (let i = array.length - 1; i > 0; i--) {\n        let j = Math.floor(Math.random() * (i + 1));\n        let temp = array[i];\n        array[i] = array[j];\n        array[j] = temp;\n      }\n\n      array.forEach((item, index) => {\n        item.id = index + 1;\n      });\n      return array;\n    };\n\n    this.restartGame = () => {\n      window.location.reload();\n    };\n  }\n\n  componentDidMount() {\n    document.title = \"Matching Game\";\n    let shuffledArr = this.state.cardsArr;\n    shuffledArr = this.shuffleArray(shuffledArr);\n    this.setState({\n      cardsArr: shuffledArr\n    });\n  }\n\n  render() {\n    let cardStyle = {\n      position: \"relative\",\n      width: \"100%\",\n      height: \"100%\",\n      textAlign: \"center\",\n      transition: \"transform 1s\",\n      transformStyle: \"preserve-3d\",\n      borderRadius: \"20px\",\n      opacity: \"1 !important\"\n    };\n    let cardStyle2 = {\n      position: \"relative\",\n      width: \"100%\",\n      height: \"100%\",\n      textAlign: \"center\",\n      transition: \"opacity 1s ease-out\",\n      transformStyle: \"preserve-3d\",\n      boxShadow: \"0px 0px 10px 10px #79d279\",\n      borderRadius: \"20px\",\n      opacity: \"0\"\n    };\n    let cardStyle3 = {\n      position: \"relative\",\n      width: \"100%\",\n      height: \"100%\",\n      textAlign: \"center\",\n      transition: \"transform 1s\",\n      transformStyle: \"preserve-3d\",\n      transform: \"rotateY(180deg)\",\n      borderRadius: \"20px\",\n      opacity: \"1\"\n    };\n    let winMessage = \"\";\n\n    if (this.state.didWin) {\n      winMessage = /*#__PURE__*/_jsxDEV(WinMessage, {\n        score: this.state.moves,\n        click: this.restartGame\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 20\n      }, this);\n    }\n\n    let cards = this.state.cardsArr.map((card, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Ccard\",\n        name: card.name,\n        id: card.id,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => this.flipCardHandler(card.id),\n          style: this.state.cardsArr[card.id - 1].removed ? cardStyle2 : this.state.cardsArr[card.id - 1].isClicked ? cardStyle3 : cardStyle,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card__face card__face--front\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card__face card__face--back\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: card.icon,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 64\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 17\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 14\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Matching Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Cards\",\n        children: cards\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Moves: \", this.state.moves]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), winMessage]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/alexforest/Desktop/MemoryGame/src/App.js"],"names":["React","Component","WinMessage","banana","coconut","palm","rum","shell","wave","pine","anchor","App","state","cardsArr","name","id","isClicked","type","removed","icon","didWin","moves","flipCardHandler","console","log","baseState","newArray","element","forEach","item","sc","card","index","push","length","prevMoves","setState","secondArray","sc2","setTimeout","removeHandler","checkWinHandler","setFalseHandler","id1","id2","nArr","el","map","i","shuffleArray","array","j","Math","floor","random","temp","restartGame","window","location","reload","componentDidMount","document","title","shuffledArr","render","cardStyle","position","width","height","textAlign","transition","transformStyle","borderRadius","opacity","cardStyle2","boxShadow","cardStyle3","transform","winMessage","cards"],"mappings":"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","sourcesContent":["\nimport './App.css';\nimport React, { Component }from 'react';\nimport WinMessage from './components/WinMessage/WinMessage';\n/*import image from './assets/brown.png';*/\nimport banana from './assets/icons/banana.png';\nimport coconut from './assets/icons/coconut.png';\nimport palm from './assets/icons/palmtree.png';\nimport rum from './assets/icons/rum.png';\nimport shell from './assets/icons/shell.png';\nimport wave from './assets/icons/wave.png';\nimport pine from './assets/icons/pineapple.png';\nimport anchor from './assets/icons/anchor.png';\n\n\nclass App extends Component {\n\n  state = {\n    cardsArr: [\n      {name: \"card1\", id: 1, isClicked: false, type: \"a\", removed: false, icon: banana},\n      {name: \"card2\", id: 2, isClicked: false, type: \"b\", removed: false, icon: coconut},\n      {name: \"card3\", id: 3, isClicked: false, type: \"c\", removed: false, icon: palm},\n      {name: \"card4\", id: 4, isClicked: false, type: \"d\", removed: false, icon: rum},\n      {name: \"card5\", id: 5, isClicked: false, type: \"e\", removed: false, icon: shell},\n      {name: \"card6\", id: 6, isClicked: false, type: \"f\", removed: false, icon: wave},\n      {name: \"card7\", id: 7, isClicked: false, type: \"g\", removed: false, icon: pine},\n      {name: \"card8\", id: 8, isClicked: false, type: \"h\", removed: false, icon: anchor},\n      {name: \"card9\", id: 9, isClicked: false, type: \"a\", removed: false, icon: banana},\n      {name: \"card10\", id: 10, isClicked: false, type: \"b\", removed: false, icon: coconut},\n      {name: \"card11\", id: 11, isClicked: false, type: \"c\", removed: false, icon: palm},\n      {name: \"card12\", id: 12, isClicked: false, type: \"d\", removed: false, icon: rum},\n      {name: \"card13\", id: 13, isClicked: false, type: \"e\", removed: false, icon: shell},\n      {name: \"card14\", id: 14, isClicked: false, type: \"f\", removed: false, icon: wave},\n      {name: \"card15\", id: 15, isClicked: false, type: \"g\", removed: false, icon: pine},\n      {name: \"card16\", id: 16, isClicked: false, type: \"h\", removed: false, icon: anchor},\n    ],\n    didWin: false,\n    moves: 0,\n  };\n\n  flipCardHandler = (id) => {\n    console.log(this.state.baseState);\n    const newArray = [...this.state.cardsArr];\n    // const element = newArray[id - 1];\n    let element;\n    newArray.forEach(item => {\n      if (item.id === id) {\n        element = item;\n      }\n    })\n\n    let sc = [];\n    newArray.forEach((card, index) => {\n      if (newArray[index].isClicked === true) {\n          sc.push(newArray[index]);\n      };\n      return sc;\n    });\n    if (sc.length < 2) {\n      element.isClicked = !element.isClicked;\n    } \n    let prevMoves = this.state.moves;\n    prevMoves += 1;\n    this.setState({cardsArr: newArray, moves: prevMoves});\n\n\n    let secondArray = this.state.cardsArr;\n    let sc2 = [];\n    secondArray.forEach((card, index) => {\n      if (secondArray[index].isClicked === true) {\n        sc2.push(secondArray[index]);\n      }\n      return sc2;\n    })\n    console.log(sc2);\n\n    if (sc2.length === 2) {\n      setTimeout(() => {\n         //IF CARDS MATCH\n         if (sc2[0].type === sc2[1].type) {\n           this.removeHandler(sc2[0].id, sc2[1].id);\n           this.checkWinHandler();\n         } else {\n           //IF CARDS DONT MATCH\n           this.setFalseHandler();\n         }\n     }, 1500);\n     \n    }\n\n  }\n\n  removeHandler = (id1, id2) => {\n      let nArr = this.state.cardsArr;\n      nArr.forEach((el, index) => {\n        if (nArr[index].id === id1) {\n            nArr[index].removed = true;\n            nArr[index].isClicked = false;\n\n        }\n        if (nArr[index].id === id2) {\n            nArr[index].removed = true;\n            nArr[index].isClicked = false;\n        }\n      });\n      this.setState({cardsArr: nArr});\n  }\n\n  setFalseHandler = () => {\n    const nArr = this.state.cardsArr;\n      nArr.map((card, index) => {\n        return nArr[index].isClicked = false;\n      })\n      this.setState({cardsArr: nArr})\n  }\n\n\n  checkWinHandler = () => {\n    const nArr = this.state.cardsArr;\n    let didWin = 0;\n    for (let i = 0; i < this.state.cardsArr.length; i++) {\n      if (nArr[i].removed) {\n        didWin++;\n      }\n    }\n    if (didWin === 16) {\n      this.setState({didWin: true});\n    }\n  }\n\n  shuffleArray = (array) => {\n    for (let i = array.length - 1; i > 0; i--) {\n      let j = Math.floor(Math.random() * (i + 1));\n      let temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n    array.forEach((item, index) => {\n      item.id = index + 1;\n    })\n    return array;\n  }\n\n  restartGame = () => {\n    window.location.reload();\n  }\n\n  componentDidMount() {\n    document.title = \"Matching Game\";\n    let shuffledArr = this.state.cardsArr;\n    shuffledArr = this.shuffleArray(shuffledArr);\n    this.setState({cardsArr: shuffledArr});\n  }\n\n  render() {\n\n    let cardStyle = {\n      position: \"relative\",\n      width: \"100%\",\n      height: \"100%\",\n      textAlign: \"center\",\n      transition: \"transform 1s\",\n      transformStyle: \"preserve-3d\",\n      borderRadius: \"20px\",\n      opacity: \"1 !important\"\n    };\n    let cardStyle2 = {\n      position: \"relative\",\n      width: \"100%\",\n      height: \"100%\",\n      textAlign: \"center\",\n      transition: \"opacity 1s ease-out\",\n      transformStyle: \"preserve-3d\",\n      boxShadow: \"0px 0px 10px 10px #79d279\",\n      borderRadius: \"20px\",\n      opacity: \"0\",\n    }\n    let cardStyle3 = {\n      position: \"relative\",\n      width: \"100%\",\n      height: \"100%\",\n      textAlign: \"center\",\n      transition: \"transform 1s\",\n      transformStyle: \"preserve-3d\",\n      transform: \"rotateY(180deg)\",\n      borderRadius: \"20px\",\n      opacity: \"1\"\n    }\n\n\n    let winMessage = \"\";\n    if (this.state.didWin) {\n      winMessage = <WinMessage score={this.state.moves} click={this.restartGame}/>;\n    }\n\n\n    let cards = this.state.cardsArr.map((card, index) => {\n      return <div className=\"Ccard\"\n                  name={card.name} \n                  id={card.id} \n                  key={index}>\n                <div onClick={() => this.flipCardHandler(card.id)} \n                    style={this.state.cardsArr[card.id -1].removed ? cardStyle2\n                    : this.state.cardsArr[card.id - 1].isClicked ? cardStyle3\n                    : cardStyle}>\n                  <div className=\"card__face card__face--front\"></div>\n                  <div className=\"card__face card__face--back\"><img src={card.icon} alt=\"\"/></div>\n                </div>\n              </div>\n    })\n\n    return (\n      <div className=\"App\">\n        <h1>Matching Game</h1>\n        <div className=\"Cards\">\n          {cards}\n        </div>\n        <h2>Moves: {this.state.moves}</h2>\n        {winMessage}\n      </div>\n    );\n  }\n  \n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}