{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/alexforest/Desktop/memory-game/src/App.js\";\nimport './App.css';\nimport React, { Component } from 'react';\nimport WinMessage from './components/WinMessage';\n/*import classes from '*.module.css';\n\n/*import Card from './components/Card';*/\n\n/*import Cards from './components/Cards';*/\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cardsArr: [{\n        name: \"card1\",\n        id: 1,\n        isClicked: false,\n        type: \"a\",\n        removed: false\n      }, {\n        name: \"card2\",\n        id: 2,\n        isClicked: false,\n        type: \"b\",\n        removed: false\n      }, {\n        name: \"card3\",\n        id: 3,\n        isClicked: false,\n        type: \"c\",\n        removed: false\n      }, {\n        name: \"card4\",\n        id: 4,\n        isClicked: false,\n        type: \"d\",\n        removed: false\n      }, {\n        name: \"card5\",\n        id: 5,\n        isClicked: false,\n        type: \"e\",\n        removed: false\n      }, {\n        name: \"card6\",\n        id: 6,\n        isClicked: false,\n        type: \"f\",\n        removed: false\n      }, {\n        name: \"card7\",\n        id: 7,\n        isClicked: false,\n        type: \"g\",\n        removed: false\n      }, {\n        name: \"card8\",\n        id: 8,\n        isClicked: false,\n        type: \"h\",\n        removed: false\n      }, {\n        name: \"card9\",\n        id: 9,\n        isClicked: false,\n        type: \"a\",\n        removed: false\n      }, {\n        name: \"card10\",\n        id: 10,\n        isClicked: false,\n        type: \"b\",\n        removed: false\n      }, {\n        name: \"card11\",\n        id: 11,\n        isClicked: false,\n        type: \"c\",\n        removed: false\n      }, {\n        name: \"card12\",\n        id: 12,\n        isClicked: false,\n        type: \"d\",\n        removed: false\n      }, {\n        name: \"card13\",\n        id: 13,\n        isClicked: false,\n        type: \"e\",\n        removed: false\n      }, {\n        name: \"card14\",\n        id: 14,\n        isClicked: false,\n        type: \"f\",\n        removed: false\n      }, {\n        name: \"card15\",\n        id: 15,\n        isClicked: false,\n        type: \"g\",\n        removed: false\n      }, {\n        name: \"card16\",\n        id: 16,\n        isClicked: false,\n        type: \"h\",\n        removed: false\n      }],\n      didWin: false\n    };\n\n    this.flipCardHandler = id => {\n      const arrZ = [...this.state.cardsArr];\n      const elZ = arrZ[id - 1];\n      elZ.isClicked = !elZ.isClicked;\n      this.setState({\n        cardsArr: arrZ\n      });\n      let sc = [];\n      arrZ.forEach((card, index) => {\n        if (arrZ[index].isClicked === true) {\n          sc.push(arrZ[index]);\n        }\n\n        ;\n        return sc;\n      });\n      console.log(sc);\n\n      if (sc.length === 2) {\n        //IF CARDS MATCH\n        if (sc[0].type === sc[1].type) {\n          this.removeHandler(sc[0].id, sc[1].id);\n          this.checkWinHandler();\n        } else {\n          //IF CARDS DONT MATCH\n          this.setFalseHandler();\n        }\n      }\n    };\n\n    this.removeHandler = (id1, id2) => {\n      let nArr = this.state.cardsArr;\n      nArr.forEach((el, index) => {\n        if (nArr[index].id === id1) {\n          nArr[index].removed = true;\n          nArr[index].isClicked = false;\n        }\n\n        if (nArr[index].id === id2) {\n          nArr[index].removed = true;\n          nArr[index].isClicked = false;\n        }\n      });\n    };\n\n    this.setFalseHandler = () => {\n      const nArr = this.state.cardsArr;\n      nArr.map((card, index) => {\n        return nArr[index].isClicked = false;\n      });\n      this.setState({\n        cardsArr: nArr\n      });\n    };\n\n    this.checkWinHandler = () => {\n      const nArr = this.state.cardsArr;\n      let didWin = 0;\n\n      for (let i = 0; i < this.state.cardsArr.length; i++) {\n        if (nArr[i].removed) {\n          didWin++;\n        }\n      }\n\n      if (didWin === 16) {\n        this.setState({\n          didWin: true\n        });\n      }\n    };\n\n    this.somethingHandler = id => {\n      console.log(\"hi\");\n      /*const arr = this.state.cardsArr;*/\n    };\n  }\n\n  render() {\n    const style1 = {\n      backgroundColor: \"transparent\",\n      cursor: \"none\"\n    };\n    const style2 = {\n      backgroundColor: \"blue\"\n    };\n    let cardStyle = {\n      position: \"relative\",\n      width: \"100%\",\n      height: \"100%\",\n      textAlign: \"center\",\n      transition: \"transform 1s\",\n      transformStyle: \"preserve-3d\",\n      boxShadow: \"0 4px 8px 0 rgba(0,0,0,0.2)\"\n    };\n    let winMessage = \"\";\n\n    if (this.state.didWin) {\n      winMessage = /*#__PURE__*/_jsxDEV(WinMessage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 20\n      }, this);\n    }\n\n    let cards = this.state.cardsArr.map(card => {\n      /* return <Card name={card.name} color={card.color} click={() => this.flipCardHandler(card.id)} key={card.id} /> */\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Ccard\",\n        name: card.name,\n        id: card.id,\n        style: this.state.cardsArr[card.id - 1].removed ? style1 : this.state.cardsArr[card.id - 1].isClicked ? style2 : null,\n        onClick: () => this.flipCardHandler(card.id),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: cardStyle,\n          onClick: () => this.somethingHandler(card.id),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card__face card__face--front\",\n            children: \"front\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card__face card__face--back\",\n            children: \"back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 17\n        }, this)\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 14\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Shell Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Cards\",\n        children: cards\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), winMessage]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/alexforest/Desktop/memory-game/src/App.js"],"names":["React","Component","WinMessage","App","state","cardsArr","name","id","isClicked","type","removed","didWin","flipCardHandler","arrZ","elZ","setState","sc","forEach","card","index","push","console","log","length","removeHandler","checkWinHandler","setFalseHandler","id1","id2","nArr","el","map","i","somethingHandler","render","style1","backgroundColor","cursor","style2","cardStyle","position","width","height","textAlign","transition","transformStyle","boxShadow","winMessage","cards"],"mappings":"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","sourcesContent":["\nimport './App.css';\nimport React, { Component }from 'react';\nimport WinMessage from './components/WinMessage';\n/*import classes from '*.module.css';\n\n/*import Card from './components/Card';*/\n/*import Cards from './components/Cards';*/\n\nclass App extends Component {\n  state = {\n    cardsArr: [\n      {name: \"card1\", id: 1, isClicked: false, type: \"a\", removed: false},\n      {name: \"card2\", id: 2, isClicked: false, type: \"b\", removed: false},\n      {name: \"card3\", id: 3, isClicked: false, type: \"c\", removed: false},\n      {name: \"card4\", id: 4, isClicked: false, type: \"d\", removed: false},\n      {name: \"card5\", id: 5, isClicked: false, type: \"e\", removed: false},\n      {name: \"card6\", id: 6, isClicked: false, type: \"f\", removed: false},\n      {name: \"card7\", id: 7, isClicked: false, type: \"g\", removed: false},\n      {name: \"card8\", id: 8, isClicked: false, type: \"h\", removed: false},\n      {name: \"card9\", id: 9, isClicked: false, type: \"a\", removed: false},\n      {name: \"card10\", id: 10, isClicked: false, type: \"b\", removed: false},\n      {name: \"card11\", id: 11, isClicked: false, type: \"c\", removed: false},\n      {name: \"card12\", id: 12, isClicked: false, type: \"d\", removed: false},\n      {name: \"card13\", id: 13, isClicked: false, type: \"e\", removed: false},\n      {name: \"card14\", id: 14, isClicked: false, type: \"f\", removed: false},\n      {name: \"card15\", id: 15, isClicked: false, type: \"g\", removed: false},\n      {name: \"card16\", id: 16, isClicked: false, type: \"h\", removed: false},\n    ],\n    didWin: false\n  };\n\n  flipCardHandler = (id) => {\n    const arrZ = [...this.state.cardsArr];\n    const elZ = arrZ[id - 1];\n    elZ.isClicked = !elZ.isClicked;\n    this.setState({cardsArr: arrZ});\n\n    let sc = [];\n    arrZ.forEach((card, index) => {\n      if (arrZ[index].isClicked === true) {\n          sc.push(arrZ[index]);\n      };\n      return sc;\n    });\n    console.log(sc);\n    if (sc.length === 2) {\n      //IF CARDS MATCH\n      if (sc[0].type === sc[1].type) {\n        this.removeHandler(sc[0].id, sc[1].id);\n        this.checkWinHandler();\n      } else {\n        //IF CARDS DONT MATCH\n        this.setFalseHandler();\n      }\n    }\n    \n\n  }\n\n  removeHandler = (id1, id2) => {\n      let nArr = this.state.cardsArr;\n      nArr.forEach((el, index) => {\n        if (nArr[index].id === id1) {\n            nArr[index].removed = true;\n            nArr[index].isClicked = false;\n\n        }\n        if (nArr[index].id === id2) {\n            nArr[index].removed = true;\n            nArr[index].isClicked = false;\n        }\n      });\n  }\n\n  setFalseHandler = () => {\n    const nArr = this.state.cardsArr;\n      nArr.map((card, index) => {\n        return nArr[index].isClicked = false;\n      })\n      this.setState({cardsArr: nArr})\n  }\n\n  checkWinHandler = () => {\n    const nArr = this.state.cardsArr;\n    let didWin = 0;\n    for (let i = 0; i < this.state.cardsArr.length; i++) {\n      if (nArr[i].removed) {\n        didWin++;\n      }\n    }\n    if (didWin === 16) {\n      this.setState({didWin: true});\n    }\n  }\n\n  somethingHandler = (id) => {\n    console.log(\"hi\");\n    /*const arr = this.state.cardsArr;*/\n\n  }\n\n  render() {\n    const style1 = {\n      backgroundColor: \"transparent\",\n      cursor: \"none\"\n    }\n    const style2 = {\n      backgroundColor: \"blue\",\n    }\n\n    let cardStyle = {\n      position: \"relative\",\n      width: \"100%\",\n      height: \"100%\",\n      textAlign: \"center\",\n      transition: \"transform 1s\",\n      transformStyle: \"preserve-3d\",\n      boxShadow: \"0 4px 8px 0 rgba(0,0,0,0.2)\"\n    };\n\n\n    let winMessage = \"\";\n    if (this.state.didWin) {\n      winMessage = <WinMessage />;\n    }\n\n\n    let cards = this.state.cardsArr.map((card) => {\n      /* return <Card name={card.name} color={card.color} click={() => this.flipCardHandler(card.id)} key={card.id} /> */\n      return <div className=\"Ccard\"\n                  name={card.name} \n                  id={card.id} \n                  style={\n                    this.state.cardsArr[card.id -1].removed ? style1\n                    : this.state.cardsArr[card.id - 1].isClicked ? style2 \n                    : null} \n                  onClick={() => this.flipCardHandler(card.id)} \n                  key={card.id}>\n                <div className={cardStyle} onClick={() => this.somethingHandler(card.id)} >\n                  <div className=\"card__face card__face--front\">front</div>\n                  <div className=\"card__face card__face--back\">back</div>\n                </div>\n              </div>\n    })\n      \n    return (\n      <div className=\"App\">\n        <h1>Shell Game</h1>\n        {/* <Cards cardsArr={this.state.cardsArr} click={(cardName) => {\n          return this.flipCardHandler(this.state.cardsArr)}\n        }/>\n        <button style={style}></button> */}\n        <div className=\"Cards\">\n          {cards}\n        </div>\n        {winMessage}\n      </div>\n    );\n  }\n  \n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}