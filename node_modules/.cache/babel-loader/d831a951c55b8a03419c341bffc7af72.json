{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/alexforest/Desktop/memory-game/src/App.js\";\nimport './App.css';\nimport React, { Component } from 'react';\n/*import Card from './components/Card';*/\n\n/*import Cards from './components/Cards';*/\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cardsArr: [{\n        name: \"card1\",\n        id: 1,\n        isClicked: false,\n        type: \"a\",\n        removed: false\n      }, {\n        name: \"card2\",\n        id: 2,\n        isClicked: false,\n        type: \"b\",\n        removed: false\n      }, {\n        name: \"card3\",\n        id: 3,\n        isClicked: false,\n        type: \"c\",\n        removed: false\n      }, {\n        name: \"card4\",\n        id: 4,\n        isClicked: false,\n        type: \"d\",\n        removed: false\n      }, {\n        name: \"card5\",\n        id: 5,\n        isClicked: false,\n        type: \"e\",\n        removed: false\n      }, {\n        name: \"card6\",\n        id: 6,\n        isClicked: false,\n        type: \"f\",\n        removed: false\n      }, {\n        name: \"card7\",\n        id: 7,\n        isClicked: false,\n        type: \"g\",\n        removed: false\n      }, {\n        name: \"card8\",\n        id: 8,\n        isClicked: false,\n        type: \"h\",\n        removed: false\n      }, {\n        name: \"card9\",\n        id: 9,\n        isClicked: false,\n        type: \"a\",\n        removed: false\n      }, {\n        name: \"card10\",\n        id: 10,\n        isClicked: false,\n        type: \"b\",\n        removed: false\n      }, {\n        name: \"card11\",\n        id: 11,\n        isClicked: false,\n        type: \"c\",\n        removed: false\n      }, {\n        name: \"card12\",\n        id: 12,\n        isClicked: false,\n        type: \"d\",\n        removed: false\n      }, {\n        name: \"card13\",\n        id: 13,\n        isClicked: false,\n        type: \"e\",\n        removed: false\n      }, {\n        name: \"card14\",\n        id: 14,\n        isClicked: false,\n        type: \"f\",\n        removed: false\n      }, {\n        name: \"card15\",\n        id: 15,\n        isClicked: false,\n        type: \"g\",\n        removed: false\n      }, {\n        name: \"card16\",\n        id: 16,\n        isClicked: false,\n        type: \"h\",\n        removed: false\n      }],\n      twoClicked: false\n    };\n\n    this.flipCardHandler = id => {\n      /* let x = this.state.cardsArr.find((el) => {\n        return el.id === id;\n      }); */\n      const arrZ = [...this.state.cardsArr];\n      const elZ = arrZ[id - 1];\n      elZ.isClicked = !elZ.isClicked;\n      /* console.log(elZ); */\n\n      console.log(arrZ);\n      this.setState({\n        cardsArr: arrZ\n      });\n      let sc = [];\n      arrZ.forEach((card, index) => {\n        if (arrZ[index].isClicked === true) {\n          sc.push(arrZ[index]);\n        }\n\n        ;\n        return sc;\n      });\n      console.log(\"sc length: \" + sc);\n\n      if (sc.length === 2) {\n        //IF CARDS MATCH\n        if (sc[0].type === sc[1].type) {\n          this.removeHandler(sc[0].id, sc[1].id);\n        } else {\n          //IF CARDS DONT MATCH\n          this.setFalseHandler();\n        }\n      }\n\n      sc.splice[(0, 2)];\n    };\n\n    this.removeHandler = (id1, id2) => {\n      /* let nArr = [...this.state.cardsArr];\n      console.log(\"win\"); */\n      let nArr = this.state.cardsArr;\n      nArr.forEach((el, index) => {\n        if (nArr[index].id === id1) {\n          nArr[index].removed = true;\n        }\n\n        if (nArr[index].id === id2) {\n          nArr[index].removed = true;\n        }\n      });\n      /* console.log(nArr); */\n\n      /*  this.setState({cardsArr: nArr}); */\n    };\n\n    this.setFalseHandler = () => {\n      const nArr = this.state.cardsArr;\n      nArr.map((card, index) => {\n        return nArr[index].isClicked = false;\n      });\n      this.setState({\n        cardsArr: nArr\n      });\n      console.log(nArr);\n    };\n  }\n\n  render() {\n    const style1 = {\n      backgroundColor: \"transparent\",\n      cursor: \"none\"\n    };\n    const style2 = {\n      backgroundColor: \"blue\"\n    };\n    let cards = this.state.cardsArr.map(card => {\n      /* return <Card name={card.name} color={card.color} click={() => this.flipCardHandler(card.id)} key={card.id} /> */\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Ccard\",\n        name: card.name,\n        id: card.id,\n        style: this.state.cardsArr[card.id - 1].removed ? style1 : this.state.cardsArr[card.id - 1].isClicked ? style2 : null,\n        onClick: () => this.flipCardHandler(card.id)\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 14\n      }, this);\n    });\n    /* let sc = [];\n    const newArr = [...this.state.cardsArr];\n    let selectedCards = newArr.forEach((card, index) => {\n      if (newArr[index].isClicked === true) {\n          sc.push(newArr[index]);\n      };\n      return sc;\n    })\n    /*console.log(sc);\n    if (sc.length === 2) {\n      \n      //IF CARDS MATCH\n      if (sc[0].type === sc[1].type) {\n        this.removeHandler(sc[0].id, sc[1].id);\n      } else {\n        //IF CARDS DONT MATCH\n        this.setFalseHandler();\n      }\n    } */\n\n    /* const style = {\n      display: 'flex',\n      flexWrap: 'wrap',\n      width: '60%',\n      backgroundColor: 'thistle',\n      margin: 'auto'\n    } */\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Shell Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Cards\",\n        children: cards\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/alexforest/Desktop/memory-game/src/App.js"],"names":["React","Component","App","state","cardsArr","name","id","isClicked","type","removed","twoClicked","flipCardHandler","arrZ","elZ","console","log","setState","sc","forEach","card","index","push","length","removeHandler","setFalseHandler","splice","id1","id2","nArr","el","map","render","style1","backgroundColor","cursor","style2","cards"],"mappings":"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","sourcesContent":["\nimport './App.css';\nimport React, { Component }from 'react';\n\n/*import Card from './components/Card';*/\n/*import Cards from './components/Cards';*/\n\nclass App extends Component {\n  state = {\n    cardsArr: [\n      {name: \"card1\", id: 1, isClicked: false, type: \"a\", removed: false},\n      {name: \"card2\", id: 2, isClicked: false, type: \"b\", removed: false},\n      {name: \"card3\", id: 3, isClicked: false, type: \"c\", removed: false},\n      {name: \"card4\", id: 4, isClicked: false, type: \"d\", removed: false},\n      {name: \"card5\", id: 5, isClicked: false, type: \"e\", removed: false},\n      {name: \"card6\", id: 6, isClicked: false, type: \"f\", removed: false},\n      {name: \"card7\", id: 7, isClicked: false, type: \"g\", removed: false},\n      {name: \"card8\", id: 8, isClicked: false, type: \"h\", removed: false},\n      {name: \"card9\", id: 9, isClicked: false, type: \"a\", removed: false},\n      {name: \"card10\", id: 10, isClicked: false, type: \"b\", removed: false},\n      {name: \"card11\", id: 11, isClicked: false, type: \"c\", removed: false},\n      {name: \"card12\", id: 12, isClicked: false, type: \"d\", removed: false},\n      {name: \"card13\", id: 13, isClicked: false, type: \"e\", removed: false},\n      {name: \"card14\", id: 14, isClicked: false, type: \"f\", removed: false},\n      {name: \"card15\", id: 15, isClicked: false, type: \"g\", removed: false},\n      {name: \"card16\", id: 16, isClicked: false, type: \"h\", removed: false},\n    ],\n    twoClicked: false\n  };\n\n  flipCardHandler = (id) => {\n    /* let x = this.state.cardsArr.find((el) => {\n      return el.id === id;\n    }); */\n    const arrZ = [...this.state.cardsArr];\n    const elZ = arrZ[id - 1];\n    elZ.isClicked = !elZ.isClicked;\n    /* console.log(elZ); */\n    console.log(arrZ);\n    this.setState({cardsArr: arrZ});\n\n    let sc = [];\n    arrZ.forEach((card, index) => {\n      if (arrZ[index].isClicked === true) {\n          sc.push(arrZ[index]);\n      };\n      return sc;\n    });\n    console.log(\"sc length: \" + sc);\n    if (sc.length === 2) {\n      //IF CARDS MATCH\n      if (sc[0].type === sc[1].type) {\n        this.removeHandler(sc[0].id, sc[1].id);\n      } else {\n        //IF CARDS DONT MATCH\n        this.setFalseHandler();\n      }\n    }\n    sc.splice[0, 2];\n\n  }\n\n  removeHandler = (id1, id2) => {\n      /* let nArr = [...this.state.cardsArr];\n      console.log(\"win\"); */\n      let nArr = this.state.cardsArr;\n      nArr.forEach((el, index) => {\n        if (nArr[index].id === id1) {\n            nArr[index].removed = true;\n        }\n        if (nArr[index].id === id2) {\n            nArr[index].removed = true;\n        }\n      });\n      /* console.log(nArr); */\n     /*  this.setState({cardsArr: nArr}); */\n  }\n\n  setFalseHandler = () => {\n    const nArr = this.state.cardsArr;\n      nArr.map((card, index) => {\n        return nArr[index].isClicked = false;\n      })\n      this.setState({cardsArr: nArr})\n      console.log(nArr);\n  }\n\n  render() {\n    const style1 = {\n      backgroundColor: \"transparent\",\n      cursor: \"none\"\n    }\n    const style2 = {\n      backgroundColor: \"blue\",\n    }\n\n\n    let cards = this.state.cardsArr.map((card) => {\n      /* return <Card name={card.name} color={card.color} click={() => this.flipCardHandler(card.id)} key={card.id} /> */\n      return <div className=\"Ccard\"\n                  name={card.name} \n                  id={card.id} \n                  style={\n                    this.state.cardsArr[card.id -1].removed ? style1\n                    : this.state.cardsArr[card.id - 1].isClicked ? style2 \n                    : null} \n                  onClick={() => this.flipCardHandler(card.id)} \n                  key={card.id}></div>\n    })\n\n    /* let sc = [];\n    const newArr = [...this.state.cardsArr];\n    let selectedCards = newArr.forEach((card, index) => {\n      if (newArr[index].isClicked === true) {\n          sc.push(newArr[index]);\n      };\n      return sc;\n    })\n    /*console.log(sc);\n    if (sc.length === 2) {\n      \n      //IF CARDS MATCH\n      if (sc[0].type === sc[1].type) {\n        this.removeHandler(sc[0].id, sc[1].id);\n      } else {\n        //IF CARDS DONT MATCH\n        this.setFalseHandler();\n      }\n    } */\n    /* const style = {\n      display: 'flex',\n      flexWrap: 'wrap',\n      width: '60%',\n      backgroundColor: 'thistle',\n      margin: 'auto'\n    } */\n\n    return (\n      <div className=\"App\">\n        <h1>Shell Game</h1>\n        {/* <Cards cardsArr={this.state.cardsArr} click={(cardName) => {\n          return this.flipCardHandler(this.state.cardsArr)}\n        }/>\n        <button style={style}></button> */}\n        <div className=\"Cards\">\n          {cards}\n        </div>\n      </div>\n    );\n  }\n  \n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}